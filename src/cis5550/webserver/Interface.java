package cis5550.webserver;

public class Interface {
	public static final String homepage_old = "<!DOCTYPE html>\r\n"
			+ "<html>\r\n"
			+ "<head>\r\n"
			+ "  <title>HOLI Search</title>\r\n"
			+ "  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.1.3/css/bootstrap.min.css\" />\r\n"
			+ "  <style>\r\n"
			+ "    /* HOLI title styles */\r\n"
			+ "    .title {\r\n"
			+ "      font-size: 120px;\r\n"
			+ "      font-weight: bold;\r\n"
			+ "      letter-spacing: 30px;\r\n"
			+ "      text-align: center;\r\n"
			+ "      margin-top: 50px;\r\n"
			+ "    }\r\n"
			+ "\r\n"
			+ "    /* HOLI character color styles */\r\n"
			+ "    .h {\r\n"
			+ "      color: #ff4d4d;\r\n"
			+ "    }\r\n"
			+ "    .o {\r\n"
			+ "      color: #ffd633;\r\n"
			+ "    }\r\n"
			+ "    .l {\r\n"
			+ "      color: #4dff4d;\r\n"
			+ "    }\r\n"
			+ "    .i {\r\n"
			+ "      color: #4d4dff;\r\n"
			+ "    }\r\n"
			+ "\r\n"
			+ "     /* Search bar styles */\r\n"
			+ "     .search-container {\r\n"
			+ "      margin-top: 80px;\r\n"
			+ "      display: flex;\r\n"
			+ "      justify-content: center;\r\n"
			+ "      align-items: center;\r\n"
			+ "      position: relative;\r\n"
			+ "    }\r\n"
			+ "    .search-box {\r\n"
			+ "      width: 50%;\r\n"
			+ "      padding: 12px 20px;\r\n"
			+ "      margin: 8px 0;\r\n"
			+ "      box-sizing: border-box;\r\n"
			+ "      border: 2px solid #ccc;\r\n"
			+ "      border-radius: 4px;\r\n"
			+ "      font-size: 16px;\r\n"
			+ "      min-height: 50px;\r\n"
			+ "      outline: none;\r\n"
			+ "      overflow: auto;\r\n"
			+ "    }\r\n"
			+ "    .search-box:focus {\r\n"
			+ "      border-color: #4CAF50;\r\n"
			+ "    }\r\n"
			+ "    .submit-button {\r\n"
			+ "      width: auto;\r\n"
			+ "      background-color: #4CAF50;\r\n"
			+ "      color: white;\r\n"
			+ "      padding: 12px 20px;\r\n"
			+ "      margin: 8px 0;\r\n"
			+ "      border: none;\r\n"
			+ "      border-radius: 4px;\r\n"
			+ "      cursor: pointer;\r\n"
			+ "      font-size: 16px;\r\n"
			+ "    }\r\n"
			+ "    .submit-button:hover {\r\n"
			+ "      background-color: #45a049;\r\n"
			+ "    }\r\n"
			+ "\r\n"
			+ "    /* Search results styles */\r\n"
			+ "    .search-results {\r\n"
			+ "      margin-top: 50px;\r\n"
			+ "      display: flex;\r\n"
			+ "      flex-direction: column;\r\n"
			+ "      align-items: center;\r\n"
			+ "    }\r\n"
			+ "    .result {\r\n"
			+ "      width: 50%;\r\n"
			+ "      background-color: #f2f2f2;\r\n"
			+ "      padding: 20px;\r\n"
			+ "      margin-top: 20px;\r\n"
			+ "      border-radius: 4px;\r\n"
			+ "      box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.2);\r\n"
			+ "    }\r\n"
			+ "    .result-title {\r\n"
			+ "      font-size: 18px;\r\n"
			+ "      font-weight: bold;\r\n"
			+ "      margin-bottom: 10px;\r\n"
			+ "    }\r\n"
			+ "    .result-url {\r\n"
			+ "      font-size: 14px;\r\n"
			+ "      color: #0066cc;\r\n"
			+ "      margin-bottom: 10px;\r\n"
			+ "    }\r\n"
			+ "    .misspelled-word {\r\n"
			+ "      color: red !important;\r\n"
			+ "      text-decoration: underline;\r\n"
			+ "    }\r\n"
			+ "    #search-suggestions {\r\n"
			+ "      position: absolute;\r\n"
			+ "      top: 100%;\r\n"
			+ "      width: 50%;\r\n"
			+ "      z-index: 999;\r\n"
			+ "      background-color: #fff;\r\n"
			+ "      border: 1px solid #ddd;\r\n"
			+ "      border-top: none;\r\n"
			+ "      max-height: 200px;\r\n"
			+ "      overflow-y: auto;\r\n"
			+ "      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n"
			+ "    }\r\n"
			+ "\r\n"
			+ "    .search-suggestion-list {\r\n"
			+ "      background-color: #fff;\r\n"
			+ "      border: 1px solid #ddd;\r\n"
			+ "      margin: 0;\r\n"
			+ "      padding: 0;\r\n"
			+ "      list-style: none;\r\n"
			+ "    }\r\n"
			+ "\r\n"
			+ "    .search-suggestion-list li {\r\n"
			+ "      padding: 10px;\r\n"
			+ "      cursor: pointer;\r\n"
			+ "      border-bottom: 1px solid #ddd;\r\n"
			+ "      transition: background-color 0.2s ease;\r\n"
			+ "    }\r\n"
			+ "\r\n"
			+ "    .search-suggestion-list li:last-child {\r\n"
			+ "      border-bottom: none;\r\n"
			+ "    }\r\n"
			+ "\r\n"
			+ "    .search-suggestion-list li:hover {\r\n"
			+ "      background-color: #f2f2f2;\r\n"
			+ "    }\r\n"
			+ "\r\n"
			+ "  </style>\r\n"
			+ "</head>\r\n"
			+ "<body>\r\n"
			+ "  <!-- HOLI title -->\r\n"
			+ "  <div class=\"title\">\r\n"
			+ "    <span class=\"h\">H</span>\r\n"
			+ "    <span class=\"o\">O</span>\r\n"
			+ "    <span class=\"l\">L</span>\r\n"
			+ "    <span class=\"i\">I</span>\r\n"
			+ "  </div>\r\n"
			+ "\r\n"
			+ "  <!-- Search bar -->\r\n"
			+ "  <div class=\"search-container\">\r\n"
			+ "    <div id=\"search-box\" class=\"search-box\" contenteditable=\"true\"></div>\r\n"
			+ "    <div id=\"search-suggestions\"></div>\r\n"
			+ "    <button id=\"submit-button\" class=\"submit-button\">Search</button>\r\n"
			+ "  </div>\r\n"
			+ "\r\n"
			+ "  <!-- Search results section -->\r\n"
			+ "  <div class=\"search-results\" id=\"search-results\">\r\n"
			+ "  </div>\r\n"
			+ "\r\n"
			+ "  <div class=\"pagination-container\">\r\n"
			+ "    <ul class=\"pagination\"></ul>\r\n"
			+ "  </div>\r\n"
			+ "<script src=\"/typo.js\"></script>\r\n"
			+ "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.1.3/js/bootstrap.min.js\"></script>\r\n"
			+ "<script>\r\n"
			+ "    let timer;\r\n"
			+ "    const dictionary = new Typo(\"en_US\");\r\n"
			+ "\r\n"
			+ "    function getQuery() {\r\n"
			+ "        return document.getElementById('search-box').textContent;\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "    const searchBox = document.getElementById('search-box');\r\n"
			+ "    const resultsDiv = document.getElementById('search-results');\r\n"
			+ "    const paginationDiv = document.getElementById('pagination');\r\n"
			+ "\r\n"
			+ "      function handlePaginationClick(event) {\r\n"
			+ "        event.preventDefault();\r\n"
			+ "        const query = getQuery();\r\n"
			+ "        \r\n"
			+ "        fetch(event.target.href)\r\n"
			+ "            .then(response => response.json())\r\n"
			+ "            .then(data => renderSearchResults(data))\r\n"
			+ "            .catch(error => {\r\n"
			+ "                console.error(\"Error:\", error);\r\n"
			+ "            });\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      function generatePagination(currentPage, totalPages) {\r\n"
			+ "        const paginationContainer = document.createElement('div');\r\n"
			+ "        paginationContainer.classList.add('pagination');\r\n"
			+ "\r\n"
			+ "        if (currentPage > 1) {\r\n"
			+ "            const prevLink = document.createElement('a');\r\n"
			+ "            prevLink.href = `http://localhost:8080/search?q=${getQuery()}&p=${currentPage - 1}`;\r\n"
			+ "            prevLink.textContent = 'Prev';\r\n"
			+ "            prevLink.addEventListener('click', handlePaginationClick);\r\n"
			+ "            paginationContainer.appendChild(prevLink);\r\n"
			+ "        }\r\n"
			+ "\r\n"
			+ "        const startPage = Math.max(currentPage - 2, 1);\r\n"
			+ "        const endPage = Math.min(currentPage + 2, totalPages);\r\n"
			+ "\r\n"
			+ "        for (let i = startPage; i <= endPage; i++) {\r\n"
			+ "            const pageLink = document.createElement('a');\r\n"
			+ "            pageLink.href = `http://localhost:8080/search?q=${getQuery()}&p=${i}`;\r\n"
			+ "            pageLink.textContent = i;\r\n"
			+ "            if (i === currentPage) {\r\n"
			+ "                pageLink.classList.add('active');\r\n"
			+ "            } else {\r\n"
			+ "                pageLink.addEventListener('click', handlePaginationClick);\r\n"
			+ "            }\r\n"
			+ "            paginationContainer.appendChild(pageLink);\r\n"
			+ "        }\r\n"
			+ "\r\n"
			+ "        if (currentPage < totalPages) {\r\n"
			+ "            const nextLink = document.createElement('a');\r\n"
			+ "            nextLink.href = `http://localhost:8080/search?q=${getQuery()}&p=${currentPage + 1}`;\r\n"
			+ "            nextLink.textContent = 'Next';\r\n"
			+ "            nextLink.addEventListener('click', handlePaginationClick);\r\n"
			+ "            paginationContainer.appendChild(nextLink);\r\n"
			+ "        }\r\n"
			+ "        return paginationContainer;\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      function renderSearchResults(data) {\r\n"
			+ "        const resultsDiv = document.getElementById('search-results');\r\n"
			+ "        resultsDiv.innerHTML = '';\r\n"
			+ "\r\n"
			+ "        for (const result of data.results) {\r\n"
			+ "            const resultElem = document.createElement('div');\r\n"
			+ "            resultElem.classList.add('result');\r\n"
			+ "\r\n"
			+ "            const titleElem = document.createElement('h2');\r\n"
			+ "            titleElem.textContent = result.title;\r\n"
			+ "            resultElem.appendChild(titleElem);\r\n"
			+ "\r\n"
			+ "            const textElem = document.createElement('p');\r\n"
			+ "            textElem.innerHTML = `<a href=\"${result.url}\">${result.url}</a>`;\r\n"
			+ "            resultElem.appendChild(textElem);\r\n"
			+ "\r\n"
			+ "            const snippetElem = document.createElement('p');\r\n"
			+ "            snippetElem.textContent = result.page_head;\r\n"
			+ "            resultElem.appendChild(snippetElem);\r\n"
			+ "\r\n"
			+ "            const cachedButton = document.createElement('button');\r\n"
			+ "            cachedButton.classList.add('btn', 'btn-primary');\r\n"
			+ "            cachedButton.textContent = 'Cached';\r\n"
			+ "            cachedButton.addEventListener('click', () => {\r\n"
			+ "              const cachedURL = `http://localhost:8080/cached?url=${result.url}`;\r\n"
			+ "              fetch(cachedURL)\r\n"
			+ "                .then(response => response.text())\r\n"
			+ "                .then(data => {\r\n"
			+ "                  const modal = document.createElement('div');\r\n"
			+ "                  modal.classList.add('modal', 'fade');\r\n"
			+ "                  modal.innerHTML = `\r\n"
			+ "                    <div class=\"modal-dialog\">\r\n"
			+ "                      <div class=\"modal-content\">\r\n"
			+ "                        <div class=\"modal-header\">\r\n"
			+ "                          <h5 class=\"modal-title\">Cached Response</h5>\r\n"
			+ "                          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n"
			+ "                        </div>\r\n"
			+ "                        <div class=\"modal-body\" style=\"height: 500px; overflow-y: auto;\">\r\n"
			+ "                          <pre>${data}</pre>\r\n"
			+ "                        </div>\r\n"
			+ "                        <div class=\"modal-footer\">\r\n"
			+ "                          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n"
			+ "                        </div>\r\n"
			+ "                      </div>\r\n"
			+ "                    </div>\r\n"
			+ "                  `;\r\n"
			+ "                  document.body.appendChild(modal);\r\n"
			+ "                  const modalInstance = new bootstrap.Modal(modal);\r\n"
			+ "                  modalInstance.show();\r\n"
			+ "                })\r\n"
			+ "                .catch(error => console.error(\"Error:\", error));\r\n"
			+ "            });\r\n"
			+ "            resultElem.appendChild(cachedButton);\r\n"
			+ "\r\n"
			+ "            resultsDiv.appendChild(resultElem);\r\n"
			+ "        }\r\n"
			+ "\r\n"
			+ "        const pagination = generatePagination(data.page, data.totalPages);\r\n"
			+ "        resultsDiv.appendChild(pagination);\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      function clearSuggestions() {\r\n"
			+ "        const suggestionList = document.querySelector('.search-suggestion-list');\r\n"
			+ "        if (suggestionList) {\r\n"
			+ "          suggestionList.remove();\r\n"
			+ "        }\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      function hideSuggestions() {\r\n"
			+ "        clearSuggestions();\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      function renderSearchSuggestions(data, words) {\r\n"
			+ "        const suggestionsList = document.getElementById('search-suggestions');\r\n"
			+ "        suggestionsList.innerHTML = '';\r\n"
			+ "\r\n"
			+ "        // // delete the last word from the list\r\n"
			+ "        // if (words.length > 1) {\r\n"
			+ "        //   words.pop();\r\n"
			+ "        // } else {\r\n"
			+ "        //   words = \"\";\r\n"
			+ "        // }\r\n"
			+ "        \r\n"
			+ "        // join the remaining words with a space\r\n"
			+ "        const joinedWords = words.join(' ');\r\n"
			+ "        // if (joinedWords.length > 0) {\r\n"
			+ "        //   joinedWords = joinedWords;\r\n"
			+ "        // }\r\n"
			+ "\r\n"
			+ "        if (data.length > 0) {\r\n"
			+ "          const dropdownList = document.createElement('ul');\r\n"
			+ "          dropdownList.classList.add('search-suggestion-list');\r\n"
			+ "          console.log(data);\r\n"
			+ "          // append li\r\n"
			+ "          for (const suggestion of data) {\r\n"
			+ "            const suggestionItem = document.createElement('li');\r\n"
			+ "            suggestionItem.textContent = joinedWords + suggestion;\r\n"
			+ "            suggestionItem.addEventListener('click', () => {\r\n"
			+ "              var span = document.createElement('span');\r\n"
			+ "              span.innerText = suggestionItem.textContent;\r\n"
			+ "              document.getElementById('search-box').innerHTML = span.outerHTML;\r\n"
			+ "              suggestionsList.innerHTML = '';\r\n"
			+ "            });\r\n"
			+ "            dropdownList.appendChild(suggestionItem);\r\n"
			+ "          }\r\n"
			+ "          suggestionsList.appendChild(dropdownList);\r\n"
			+ "        } \r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      document.getElementById('search-box').addEventListener('keyup', function(event) {\r\n"
			+ "        clearTimeout(timer);\r\n"
			+ "        timer = setTimeout(() => {\r\n"
			+ "          var query = searchBox.textContent;\r\n"
			+ "          // Save cursor position\r\n"
			+ "          const currentPosition = searchBox.textContent.length;\r\n"
			+ "          \r\n"
			+ "          // split the query into words\r\n"
			+ "          var words = query.split(/\\s+/);\r\n"
			+ "          var oldWords = query.split(/\\s+/);\r\n"
			+ "\r\n"
			+ "          // set a flag\r\n"
			+ "          var hasMisspell = false;\r\n"
			+ "          // iterate over words and check their spelling\r\n"
			+ "          for (var i = 0; i < words.length; i++) {\r\n"
			+ "            var word = words[i];\r\n"
			+ "            if (!dictionary.check(word)) {\r\n"
			+ "              hasMisspell = true;\r\n"
			+ "              var span = document.createElement('span');\r\n"
			+ "              span.style.color = 'red';\r\n"
			+ "              span.innerText = word;\r\n"
			+ "              words[i] = span.outerHTML;\r\n"
			+ "              console.log(\"wrong word\", word);\r\n"
			+ "\r\n"
			+ "            } else {\r\n"
			+ "              var span = document.createElement('span');\r\n"
			+ "              span.innerText = word;\r\n"
			+ "              words[i] = span.outerHTML;\r\n"
			+ "            }\r\n"
			+ "          }\r\n"
			+ "\r\n"
			+ "          // check the last word for the search suggestion\r\n"
			+ "          if (oldWords.length > 0) {\r\n"
			+ "            var word = oldWords[oldWords.length-1];\r\n"
			+ "            // fetch all the suggestion\r\n"
			+ "            const cachedURL = `http://localhost:8080/suggestion?word=${encodeURIComponent(word)}`;\r\n"
			+ "            fetch(cachedURL)\r\n"
			+ "              .then(response => response.json())\r\n"
			+ "              .then(data => {\r\n"
			+ "                clearSuggestions();\r\n"
			+ "                renderSearchSuggestions(data, oldWords);\r\n"
			+ "              })\r\n"
			+ "              .catch(error => console.error(\"Error:\", error));\r\n"
			+ "          }\r\n"
			+ "          \r\n"
			+ "            searchBox.innerHTML = words.join(' ');\r\n"
			+ "\r\n"
			+ "            // set cursor position to end of input box\r\n"
			+ "            console.log(currentPosition);\r\n"
			+ "            // move cursor to end of searchBox\r\n"
			+ "            // restore the cursor position\r\n"
			+ "            var range = document.createRange();\r\n"
			+ "            var sel = window.getSelection();\r\n"
			+ "            range.setStart(searchBox.childNodes[searchBox.childNodes.length - 1], 1);\r\n"
			+ "            range.collapse(true);\r\n"
			+ "            sel.removeAllRanges();\r\n"
			+ "            sel.addRange(range);\r\n"
			+ "            searchBox.focus();\r\n"
			+ "          \r\n"
			+ "        }, 500);\r\n"
			+ "      });\r\n"
			+ "\r\n"
			+ "      document.getElementById('submit-button').addEventListener('click', function(event) {\r\n"
			+ "        event.preventDefault();\r\n"
			+ "        const query = getQuery();\r\n"
			+ "        console.log(query);\r\n"
			+ "        const url = `http://localhost:8080/search?q=${query}&p=1`;\r\n"
			+ "        fetch(url)\r\n"
			+ "            .then(response => response.json())\r\n"
			+ "            .then(data => renderSearchResults(data))\r\n"
			+ "            .catch(error => {\r\n"
			+ "                console.error(\"Error:\", error);\r\n"
			+ "                // resultsDiv.textContent = \"An error occurred. Please try again later.\";\r\n"
			+ "            });\r\n"
			+ "      });\r\n"
			+ "      \r\n"
			+ "      \r\n"
			+ "\r\n"
			+ "    </script>\r\n"
			+ "  </body>\r\n"
			+ "</html>";
	
	public static final String homepage = "<!DOCTYPE html>\r\n"
			+ "<html>\r\n"
			+ "<head>\r\n"
			+ "  <title>HOLI Search</title>\r\n"
			+ "  <style>\r\n"
			+ "    /* HOLI title styles */\r\n"
			+ "    .title {\r\n"
			+ "      font-size: 120px;\r\n"
			+ "      font-weight: bold;\r\n"
			+ "      letter-spacing: 30px;\r\n"
			+ "      text-align: center;\r\n"
			+ "      margin-top: 50px;\r\n"
			+ "    }\r\n"
			+ "\r\n"
			+ "    /* HOLI character color styles */\r\n"
			+ "    .h {\r\n"
			+ "      color: #ff4d4d;\r\n"
			+ "    }\r\n"
			+ "    .o {\r\n"
			+ "      color: #ffd633;\r\n"
			+ "    }\r\n"
			+ "    .l {\r\n"
			+ "      color: #4dff4d;\r\n"
			+ "    }\r\n"
			+ "    .i {\r\n"
			+ "      color: #4d4dff;\r\n"
			+ "    }\r\n"
			+ "\r\n"
			+ "    /* Search bar styles */\r\n"
			+ "    .search-container {\r\n"
			+ "      margin-top: 80px;\r\n"
			+ "      display: flex;\r\n"
			+ "      justify-content: center;\r\n"
			+ "      align-items: center;\r\n"
			+ "    }\r\n"
			+ "    input[type=text] {\r\n"
			+ "      width: 50%;\r\n"
			+ "      padding: 12px 20px;\r\n"
			+ "      margin: 8px 0;\r\n"
			+ "      box-sizing: border-box;\r\n"
			+ "      border: 2px solid #ccc;\r\n"
			+ "      border-radius: 4px;\r\n"
			+ "      font-size: 16px;\r\n"
			+ "    }\r\n"
			+ "    input[type=submit] {\r\n"
			+ "      width: auto;\r\n"
			+ "      background-color: #4CAF50;\r\n"
			+ "      color: white;\r\n"
			+ "      padding: 12px 20px;\r\n"
			+ "      margin: 8px 0;\r\n"
			+ "      border: none;\r\n"
			+ "      border-radius: 4px;\r\n"
			+ "      cursor: pointer;\r\n"
			+ "      font-size: 16px;\r\n"
			+ "    }\r\n"
			+ "    input[type=submit]:hover {\r\n"
			+ "      background-color: #45a049;\r\n"
			+ "    }\r\n"
			+ "\r\n"
			+ "    /* Search results styles */\r\n"
			+ "    .search-results {\r\n"
			+ "      margin-top: 50px;\r\n"
			+ "      display: flex;\r\n"
			+ "      flex-direction: column;\r\n"
			+ "      align-items: center;\r\n"
			+ "    }\r\n"
			+ "    .result {\r\n"
			+ "      width: 50%;\r\n"
			+ "      background-color: #f2f2f2;\r\n"
			+ "      padding: 20px;\r\n"
			+ "      margin-top: 20px;\r\n"
			+ "      border-radius: 4px;\r\n"
			+ "      box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.2);\r\n"
			+ "    }\r\n"
			+ "    .result-title {\r\n"
			+ "      font-size: 18px;\r\n"
			+ "      font-weight: bold;\r\n"
			+ "      margin-bottom: 10px;\r\n"
			+ "    }\r\n"
			+ "    .result-url {\r\n"
			+ "      font-size: 14px;\r\n"
			+ "      color: #0066cc;\r\n"
			+ "      margin-bottom: 10px;\r\n"
			+ "    }\r\n"
			+ "  </style>\r\n"
			+ "</head>\r\n"
			+ "<body>\r\n"
			+ "  <!-- HOLI title -->\r\n"
			+ "  <div class=\"title\">\r\n"
			+ "    <span class=\"h\">H</span>\r\n"
			+ "    <span class=\"o\">O</span>\r\n"
			+ "    <span class=\"l\">L</span>\r\n"
			+ "    <span class=\"i\">I</span>\r\n"
			+ "  </div>\r\n"
			+ "\r\n"
			+ "  <!-- Search bar -->\r\n"
			+ "  <div class=\"search-container\">\r\n"
			+ "    <form id=\"search-form\">\r\n"
			+ "      <input type=\"text\" placeholder=\"Search...\" name=\"query\">\r\n"
			+ "      <input type=\"submit\" value=\"Search\">\r\n"
			+ "    </form>\r\n"
			+ "  </div>\r\n"
			+ "\r\n"
			+ "  <!-- Search results section -->\r\n"
			+ "  <div class=\"search-results\" id=\"search-results\">\r\n"
			+ "  </div>\r\n"
			+ "\r\n"
			+ "  <div class=\"pagination-container\">\r\n"
			+ "    <ul class=\"pagination\"></ul>\r\n"
			+ "  </div>\r\n"
			+ "\r\n"
			+ "<script>\r\n"
			+ "    function getQuery() {\r\n"
			+ "        return form.elements.query.value;\r\n"
			+ "      }\r\n"
			+ "    const form = document.getElementById('search-form');\r\n"
			+ "    const resultsDiv = document.getElementById('search-results');\r\n"
			+ "    const paginationDiv = document.getElementById('pagination');\r\n"
			+ "      function handlePaginationClick(event) {\r\n"
			+ "        event.preventDefault();\r\n"
			+ "        const query = form.elements.query.value;\r\n"
			+ "        // const page = event.target.dataset.page;\r\n"
			+ "        // console.log(page)\r\n"
			+ "        // const url = `http://localhost:8080/search?q=${query}&p=${page}`;\r\n"
			+ "        fetch(event.target.href)\r\n"
			+ "            .then(response => response.json())\r\n"
			+ "            .then(data => renderSearchResults(data))\r\n"
			+ "            .catch(error => {\r\n"
			+ "                console.error(\"Error:\", error);\r\n"
			+ "            });\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      function generatePagination(currentPage, totalPages) {\r\n"
			+ "        const paginationContainer = document.createElement('div');\r\n"
			+ "        paginationContainer.classList.add('pagination');\r\n"
			+ "\r\n"
			+ "        if (currentPage > 1) {\r\n"
			+ "            const prevLink = document.createElement('a');\r\n"
			+ "            prevLink.href = `http://localhost:8080/search?q=${getQuery()}&p=${currentPage - 1}`;\r\n"
			+ "            prevLink.textContent = 'Prev';\r\n"
			+ "            prevLink.addEventListener('click', handlePaginationClick);\r\n"
			+ "            paginationContainer.appendChild(prevLink);\r\n"
			+ "        }\r\n"
			+ "\r\n"
			+ "        const startPage = Math.max(currentPage - 2, 1);\r\n"
			+ "        const endPage = Math.min(currentPage + 2, totalPages);\r\n"
			+ "\r\n"
			+ "        for (let i = startPage; i <= endPage; i++) {\r\n"
			+ "            const pageLink = document.createElement('a');\r\n"
			+ "            pageLink.href = `http://localhost:8080/search?q=${getQuery()}&p=${i}`;\r\n"
			+ "            pageLink.textContent = i;\r\n"
			+ "            if (i === currentPage) {\r\n"
			+ "                pageLink.classList.add('active');\r\n"
			+ "            } else {\r\n"
			+ "                pageLink.addEventListener('click', handlePaginationClick);\r\n"
			+ "            }\r\n"
			+ "            paginationContainer.appendChild(pageLink);\r\n"
			+ "        }\r\n"
			+ "\r\n"
			+ "        if (currentPage < totalPages) {\r\n"
			+ "            const nextLink = document.createElement('a');\r\n"
			+ "            nextLink.href = `http://localhost:8080/search?q=${getQuery()}&p=${currentPage + 1}`;\r\n"
			+ "            nextLink.textContent = 'Next';\r\n"
			+ "            nextLink.addEventListener('click', handlePaginationClick);\r\n"
			+ "            paginationContainer.appendChild(nextLink);\r\n"
			+ "        }\r\n"
			+ "        return paginationContainer;\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      function renderSearchResults(data) {\r\n"
			+ "        const resultsDiv = document.getElementById('search-results');\r\n"
			+ "        resultsDiv.innerHTML = '';\r\n"
			+ "\r\n"
			+ "        for (const result of data.results) {\r\n"
			+ "            const resultElem = document.createElement('div');\r\n"
			+ "            resultElem.classList.add('result');\r\n"
			+ "\r\n"
			+ "            const titleElem = document.createElement('h2');\r\n"
			+ "            titleElem.textContent = result.title;\r\n"
			+ "            resultElem.appendChild(titleElem);\r\n"
			+ "\r\n"
			+ "            const textElem = document.createElement('p');\r\n"
			+ "            textElem.innerHTML = `<a href=\"${result.url}\">${result.url}</a>`;\r\n"
			+ "            resultElem.appendChild(textElem);\r\n"
			+ "\r\n"
			+ "            resultsDiv.appendChild(resultElem);\r\n"
			+ "        }\r\n"
			+ "\r\n"
			+ "        const pagination = generatePagination(data.page, data.totalPages);\r\n"
			+ "        resultsDiv.appendChild(pagination);\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      \r\n"
			+ "\r\n"
			+ "      form.addEventListener('submit', function(event) {\r\n"
			+ "        event.preventDefault();\r\n"
			+ "        const query = form.elements.query.value;\r\n"
			+ "        const url = `http://localhost:8080/search?q=${query}&p=1`;\r\n"
			+ "        fetch(url)\r\n"
			+ "            .then(response => response.json())\r\n"
			+ "            .then(data => renderSearchResults(data))\r\n"
			+ "            .catch(error => {\r\n"
			+ "                console.error(\"Error:\", error);\r\n"
			+ "                // resultsDiv.textContent = \"An error occurred. Please try again later.\";\r\n"
			+ "            });\r\n"
			+ "      });\r\n"
			+ "      \r\n"
			+ "    </script>\r\n"
			+ "  </body>\r\n"
			+ "</html>";
	public static final String home_cached = "<!DOCTYPE html>\r\n"
			+ "<html>\r\n"
			+ "<head>\r\n"
			+ "  <title>HOLI Search</title>\r\n"
			+ "  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.1.3/css/bootstrap.min.css\" />\r\n"
			+ "  <style>\r\n"
			+ "    /* HOLI title styles */\r\n"
			+ "    .title {\r\n"
			+ "      font-size: 120px;\r\n"
			+ "      font-weight: bold;\r\n"
			+ "      letter-spacing: 30px;\r\n"
			+ "      text-align: center;\r\n"
			+ "      margin-top: 50px;\r\n"
			+ "    }\r\n"
			+ "\r\n"
			+ "    /* HOLI character color styles */\r\n"
			+ "    .h {\r\n"
			+ "      color: #ff4d4d;\r\n"
			+ "    }\r\n"
			+ "    .o {\r\n"
			+ "      color: #ffd633;\r\n"
			+ "    }\r\n"
			+ "    .l {\r\n"
			+ "      color: #4dff4d;\r\n"
			+ "    }\r\n"
			+ "    .i {\r\n"
			+ "      color: #4d4dff;\r\n"
			+ "    }\r\n"
			+ "\r\n"
			+ "     /* Search bar styles */\r\n"
			+ "     .search-container {\r\n"
			+ "      margin-top: 80px;\r\n"
			+ "      display: flex;\r\n"
			+ "      justify-content: center;\r\n"
			+ "      align-items: center;\r\n"
			+ "    }\r\n"
			+ "    .search-box {\r\n"
			+ "      width: 50%;\r\n"
			+ "      padding: 12px 20px;\r\n"
			+ "      margin: 8px 0;\r\n"
			+ "      box-sizing: border-box;\r\n"
			+ "      border: 2px solid #ccc;\r\n"
			+ "      border-radius: 4px;\r\n"
			+ "      font-size: 16px;\r\n"
			+ "      min-height: 50px;\r\n"
			+ "      outline: none;\r\n"
			+ "      overflow: auto;\r\n"
			+ "    }\r\n"
			+ "    .search-box:focus {\r\n"
			+ "      border-color: #4CAF50;\r\n"
			+ "    }\r\n"
			+ "    .submit-button {\r\n"
			+ "      width: auto;\r\n"
			+ "      background-color: #4CAF50;\r\n"
			+ "      color: white;\r\n"
			+ "      padding: 12px 20px;\r\n"
			+ "      margin: 8px 0;\r\n"
			+ "      border: none;\r\n"
			+ "      border-radius: 4px;\r\n"
			+ "      cursor: pointer;\r\n"
			+ "      font-size: 16px;\r\n"
			+ "    }\r\n"
			+ "    .submit-button:hover {\r\n"
			+ "      background-color: #45a049;\r\n"
			+ "    }\r\n"
			+ "\r\n"
			+ "    /* Search results styles */\r\n"
			+ "    .search-results {\r\n"
			+ "      margin-top: 50px;\r\n"
			+ "      display: flex;\r\n"
			+ "      flex-direction: column;\r\n"
			+ "      align-items: center;\r\n"
			+ "    }\r\n"
			+ "    .result {\r\n"
			+ "      width: 50%;\r\n"
			+ "      background-color: #f2f2f2;\r\n"
			+ "      padding: 20px;\r\n"
			+ "      margin-top: 20px;\r\n"
			+ "      border-radius: 4px;\r\n"
			+ "      box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.2);\r\n"
			+ "    }\r\n"
			+ "    .result-title {\r\n"
			+ "      font-size: 18px;\r\n"
			+ "      font-weight: bold;\r\n"
			+ "      margin-bottom: 10px;\r\n"
			+ "    }\r\n"
			+ "    .result-url {\r\n"
			+ "      font-size: 14px;\r\n"
			+ "      color: #0066cc;\r\n"
			+ "      margin-bottom: 10px;\r\n"
			+ "    }\r\n"
			+ "    .misspelled-word {\r\n"
			+ "      color: red !important;\r\n"
			+ "      text-decoration: underline;\r\n"
			+ "    }\r\n"
			+ "  </style>\r\n"
			+ "</head>\r\n"
			+ "<body>\r\n"
			+ "  <!-- HOLI title -->\r\n"
			+ "  <div class=\"title\">\r\n"
			+ "    <span class=\"h\">H</span>\r\n"
			+ "    <span class=\"o\">O</span>\r\n"
			+ "    <span class=\"l\">L</span>\r\n"
			+ "    <span class=\"i\">I</span>\r\n"
			+ "  </div>\r\n"
			+ "\r\n"
			+ "  <!-- Search bar -->\r\n"
			+ "  <div class=\"search-container\">\r\n"
			+ "    <div id=\"search-box\" class=\"search-box\" contenteditable=\"true\"></div>\r\n"
			+ "    <button id=\"submit-button\" class=\"submit-button\">Search</button>\r\n"
			+ "  </div>\r\n"
			+ "\r\n"
			+ "  <!-- Search results section -->\r\n"
			+ "  <div class=\"search-results\" id=\"search-results\">\r\n"
			+ "  </div>\r\n"
			+ "\r\n"
			+ "  <div class=\"pagination-container\">\r\n"
			+ "    <ul class=\"pagination\"></ul>\r\n"
			+ "  </div>\r\n"
			+ "<script src=\"/typo.js\"></script>\r\n"
			+ "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.1.3/js/bootstrap.min.js\"></script>\r\n"
			+ "<script>\r\n"
			+ "    let timer;\r\n"
			+ "    const dictionary = new Typo(\"en_US\");\r\n"
			+ "\r\n"
			+ "    function getQuery() {\r\n"
			+ "        return document.getElementById('search-box').textContent;\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "    const searchBox = document.getElementById('search-box');\r\n"
			+ "    const resultsDiv = document.getElementById('search-results');\r\n"
			+ "    const paginationDiv = document.getElementById('pagination');\r\n"
			+ "\r\n"
			+ "      function handlePaginationClick(event) {\r\n"
			+ "        event.preventDefault();\r\n"
			+ "        const query = getQuery();\r\n"
			+ "        \r\n"
			+ "        fetch(event.target.href)\r\n"
			+ "            .then(response => response.json())\r\n"
			+ "            .then(data => renderSearchResults(data))\r\n"
			+ "            .catch(error => {\r\n"
			+ "                console.error(\"Error:\", error);\r\n"
			+ "            });\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      function generatePagination(currentPage, totalPages) {\r\n"
			+ "        const paginationContainer = document.createElement('div');\r\n"
			+ "        paginationContainer.classList.add('pagination');\r\n"
			+ "\r\n"
			+ "        if (currentPage > 1) {\r\n"
			+ "            const prevLink = document.createElement('a');\r\n"
			+ "            prevLink.href = `http://localhost:8080/search?q=${getQuery()}&p=${currentPage - 1}`;\r\n"
			+ "            prevLink.textContent = 'Prev';\r\n"
			+ "            prevLink.addEventListener('click', handlePaginationClick);\r\n"
			+ "            paginationContainer.appendChild(prevLink);\r\n"
			+ "        }\r\n"
			+ "\r\n"
			+ "        const startPage = Math.max(currentPage - 2, 1);\r\n"
			+ "        const endPage = Math.min(currentPage + 2, totalPages);\r\n"
			+ "\r\n"
			+ "        for (let i = startPage; i <= endPage; i++) {\r\n"
			+ "            const pageLink = document.createElement('a');\r\n"
			+ "            pageLink.href = `http://localhost:8080/search?q=${getQuery()}&p=${i}`;\r\n"
			+ "            pageLink.textContent = i;\r\n"
			+ "            if (i === currentPage) {\r\n"
			+ "                pageLink.classList.add('active');\r\n"
			+ "            } else {\r\n"
			+ "                pageLink.addEventListener('click', handlePaginationClick);\r\n"
			+ "            }\r\n"
			+ "            paginationContainer.appendChild(pageLink);\r\n"
			+ "        }\r\n"
			+ "\r\n"
			+ "        if (currentPage < totalPages) {\r\n"
			+ "            const nextLink = document.createElement('a');\r\n"
			+ "            nextLink.href = `http://localhost:8080/search?q=${getQuery()}&p=${currentPage + 1}`;\r\n"
			+ "            nextLink.textContent = 'Next';\r\n"
			+ "            nextLink.addEventListener('click', handlePaginationClick);\r\n"
			+ "            paginationContainer.appendChild(nextLink);\r\n"
			+ "        }\r\n"
			+ "        return paginationContainer;\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      function renderSearchResults(data) {\r\n"
			+ "        const resultsDiv = document.getElementById('search-results');\r\n"
			+ "        resultsDiv.innerHTML = '';\r\n"
			+ "\r\n"
			+ "        for (const result of data.results) {\r\n"
			+ "            const resultElem = document.createElement('div');\r\n"
			+ "            resultElem.classList.add('result');\r\n"
			+ "\r\n"
			+ "            const titleElem = document.createElement('h2');\r\n"
			+ "            titleElem.textContent = result.title;\r\n"
			+ "            resultElem.appendChild(titleElem);\r\n"
			+ "\r\n"
			+ "            const textElem = document.createElement('p');\r\n"
			+ "            textElem.innerHTML = `<a href=\"${result.url}\">${result.url}</a>`;\r\n"
			+ "            resultElem.appendChild(textElem);\r\n"
			+ "\r\n"
			+ "            const snippetElem = document.createElement('p');\r\n"
			+ "            snippetElem.textContent = result.page_head;\r\n"
			+ "            resultElem.appendChild(snippetElem);\r\n"
			+ "\r\n"
			+ "            const cachedButton = document.createElement('button');\r\n"
			+ "            cachedButton.classList.add('btn', 'btn-primary');\r\n"
			+ "            cachedButton.textContent = 'Cached';\r\n"
			+ "            cachedButton.addEventListener('click', () => {\r\n"
			+ "              const cachedURL = `http://localhost:8080/cached?url=${result.url}`;\r\n"
			+ "              fetch(cachedURL)\r\n"
			+ "                .then(response => response.text())\r\n"
			+ "                .then(data => {\r\n"
			+ "                  const modal = document.createElement('div');\r\n"
			+ "                  modal.classList.add('modal', 'fade');\r\n"
			+ "                  modal.innerHTML = `\r\n"
			+ "                    <div class=\"modal-dialog\">\r\n"
			+ "                      <div class=\"modal-content\">\r\n"
			+ "                        <div class=\"modal-header\">\r\n"
			+ "                          <h5 class=\"modal-title\">Cached Response</h5>\r\n"
			+ "                          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n"
			+ "                        </div>\r\n"
			+ "                        <div class=\"modal-body\" style=\"height: 500px; overflow-y: auto;\">\r\n"
			+ "                          <pre>${data}</pre>\r\n"
			+ "                        </div>\r\n"
			+ "                        <div class=\"modal-footer\">\r\n"
			+ "                          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n"
			+ "                        </div>\r\n"
			+ "                      </div>\r\n"
			+ "                    </div>\r\n"
			+ "                  `;\r\n"
			+ "                  document.body.appendChild(modal);\r\n"
			+ "                  const modalInstance = new bootstrap.Modal(modal);\r\n"
			+ "                  modalInstance.show();\r\n"
			+ "                })\r\n"
			+ "                .catch(error => console.error(\"Error:\", error));\r\n"
			+ "            });\r\n"
			+ "            resultElem.appendChild(cachedButton);\r\n"
			+ "\r\n"
			+ "            resultsDiv.appendChild(resultElem);\r\n"
			+ "        }\r\n"
			+ "\r\n"
			+ "        const pagination = generatePagination(data.page, data.totalPages);\r\n"
			+ "        resultsDiv.appendChild(pagination);\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      document.getElementById('search-box').addEventListener('keyup', function(event) {\r\n"
			+ "        clearTimeout(timer);\r\n"
			+ "        timer = setTimeout(() => {\r\n"
			+ "          var query = searchBox.textContent;\r\n"
			+ "          // Save cursor position\r\n"
			+ "          const currentPosition = searchBox.textContent.length;\r\n"
			+ "          \r\n"
			+ "\r\n"
			+ "\r\n"
			+ "          // split the query into words\r\n"
			+ "          var words = query.split(/\\s+/);\r\n"
			+ "          // set a flag\r\n"
			+ "          var hasMisspell = false;\r\n"
			+ "          // iterate over words and check their spelling\r\n"
			+ "          for (var i = 0; i < words.length; i++) {\r\n"
			+ "            var word = words[i];\r\n"
			+ "            if (!dictionary.check(word)) {\r\n"
			+ "              hasMisspell = true;\r\n"
			+ "              var span = document.createElement('span');\r\n"
			+ "              span.style.color = 'red';\r\n"
			+ "              span.innerText = word;\r\n"
			+ "              words[i] = span.outerHTML;\r\n"
			+ "              console.log(\"wrong word\", word);\r\n"
			+ "\r\n"
			+ "            } else {\r\n"
			+ "              var span = document.createElement('span');\r\n"
			+ "              span.innerText = word;\r\n"
			+ "              words[i] = span.outerHTML;\r\n"
			+ "            }\r\n"
			+ "          }\r\n"
			+ "          \r\n"
			+ "            searchBox.innerHTML = words.join(' ');\r\n"
			+ "\r\n"
			+ "            // set cursor position to end of input box\r\n"
			+ "            console.log(currentPosition);\r\n"
			+ "            // move cursor to end of searchBox\r\n"
			+ "            // restore the cursor position\r\n"
			+ "            var range = document.createRange();\r\n"
			+ "            var sel = window.getSelection();\r\n"
			+ "            range.setStart(searchBox.childNodes[searchBox.childNodes.length - 1], 1);\r\n"
			+ "            range.collapse(true);\r\n"
			+ "            sel.removeAllRanges();\r\n"
			+ "            sel.addRange(range);\r\n"
			+ "            searchBox.focus();\r\n"
			+ "          \r\n"
			+ "        }, 500);\r\n"
			+ "      });\r\n"
			+ "\r\n"
			+ "      document.getElementById('submit-button').addEventListener('click', function(event) {\r\n"
			+ "        event.preventDefault();\r\n"
			+ "        const query = getQuery();\r\n"
			+ "        console.log(query);\r\n"
			+ "        const url = `http://localhost:8080/search?q=${query}&p=1`;\r\n"
			+ "        fetch(url)\r\n"
			+ "            .then(response => response.json())\r\n"
			+ "            .then(data => renderSearchResults(data))\r\n"
			+ "            .catch(error => {\r\n"
			+ "                console.error(\"Error:\", error);\r\n"
			+ "                // resultsDiv.textContent = \"An error occurred. Please try again later.\";\r\n"
			+ "            });\r\n"
			+ "      });\r\n"
			+ "      \r\n"
			+ "    </script>\r\n"
			+ "  </body>\r\n"
			+ "</html>";
}
